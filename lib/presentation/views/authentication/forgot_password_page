import 'package:fluent_ui/fluent_ui.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:easthardware_pms/presentation/bloc/authentication/authentication_bloc.dart';
import 'package:easthardware_pms/presentation/widgets/layout/gaps.dart';
import 'package:easthardware_pms/presentation/router/app_router.dart';

class ForgotPasswordPage extends StatefulWidget {
  const ForgotPasswordPage({super.key});

  @override
  State<StatefulWidget> createState() => _ForgotPasswordPageState();
}

class _ForgotPasswordPageState extends State<ForgotPasswordPage> {
  final TextEditingController _usernameController = TextEditingController();
  final TextEditingController _answerController = TextEditingController();
  String? selectedQuestion;

  // void _handleSubmit(BuildContext context) {
  //   primaryFocus?.unfocus();
  //   context.read<AuthenticationBloc>().add(ResetPasswordEvent(
  //         username: _usernameController.text.trim(),
  //         selectedQuestion: selectedQuestion,
  //         securityAnswer: _answerController.text.trim(),
  //       ));
  // }

  @override
  Widget build(BuildContext context) {
    return BlocListener<AuthenticationBloc, AuthenticationState>(
      listener: (_, state) {
        if (state is ForgotPasswordSuccessState) {
          router.goNamed("New Password");
        }
      },
      child: ScaffoldPage.withPadding(
        padding: const EdgeInsets.all(16),
        content: Center(
          child: SizedBox(
            height: 450,
            width: 600,
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                const FormHeader(),
                TextInputFormRow(
                  controller: _usernameController,
                  label: 'Username',
                  placeholder: 'Enter username',
                ),
                SecurityQuestionDropdown(
                  selectedQuestion: selectedQuestion,
                  onChanged: (value) =>
                      setState(() => selectedQuestion = value),
                  label: "Security Question",
                ),
                TextInputFormRow(
                  controller: _answerController,
                  label: "Answer",
                  placeholder: 'Enter answer',
                ),
                SubmitButtonRow(onPressed: () => _handleSubmit(context))
              ].withGap(() => Gaps.v16),
            ),
          ),
        ),
      ),
    );
  }
}

class FormHeader extends StatelessWidget {
  const FormHeader({super.key});

  @override
  Widget build(BuildContext context) {
    return Column(
        crossAxisAlignment: CrossAxisAlignment.stretch,
        children: [
          Text(
            "Forgot Password",
            style: FluentTheme.of(context).typography.title,
            textAlign: TextAlign.start,
          ),
          Text(
            "Fill in the form below to verify authenthicity",
            style: FluentTheme.of(context)
                .typography
                .body
                ?.copyWith(color: Colors.grey[170]),
            textAlign: TextAlign.start,
          )
        ].withGap(() => Gaps.v8));
  }
}

class SecurityQuestionDropdown extends StatelessWidget {
  const SecurityQuestionDropdown({
    required this.selectedQuestion,
    required this.onChanged,
    required this.label,
    super.key,
  });

  final String? selectedQuestion;
  final ValueChanged<String?> onChanged;
  final String label;

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.stretch,
      children: [
        Text(label),
        Gaps.v8,
        ComboBox<String>(
          placeholder: const Text("Select a question"),
          value: selectedQuestion,
          items: const [
            ComboBoxItem(
                value: "color", child: Text("What's your favorite color?")),
            ComboBoxItem(
                value: "dog", child: Text("What's the name of your pet dog?")),
            ComboBoxItem(
                value: "maiden",
                child: Text("What's the maiden name of your mother?")),
          ],
          onChanged: onChanged,
          isExpanded: true,
        ),
      ],
    );
  }
}

class TextInputFormRow extends StatelessWidget {
  const TextInputFormRow({
    required this.controller,
    required this.label,
    required this.placeholder,
    super.key,
  });

  final TextEditingController controller;
  final String label;
  final String placeholder;

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.stretch,
      children: [
        Text(label),
        Gaps.v8,
        TextBox(
          controller: controller,
          placeholder: placeholder,
        ),
      ],
    );
  }
}

class SubmitButtonRow extends StatelessWidget {
  const SubmitButtonRow({super.key, required this.onPressed});

  final Function() onPressed;

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.stretch,
      children: [
        FilledButton(
          onPressed: onPressed,
          child: Padding(
            padding: const EdgeInsets.all(4),
            child: Text(
              "Submit",
              style: FluentTheme.of(context)
                  .typography
                  .bodyLarge!
                  .copyWith(color: const Color(0xFFFFFFFF)),
            ),
          ),
        ),
      ],
    );
  }
}
